[tool.poetry]
name = "infrahub_ansible_modules"
version = "0.0.4"
description = "Ansible collection to interact with Infrahub's API"
authors = ["OpsMill <info@opsmill.com>"]
license = "GPLv3"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
ansible-core = "^2.14"
ruff = "^0.1.5"
codecov = "*"
coverage = "^6.5"
deepdiff = "*"
cryptography = "*"
jinja2 = "*"
jmespath = "*"
pytest = "*"
pytest-mock = "*"
pytest-xdist = "*"
pytest-forked = "^1.6.0"
pyyaml = "*"
mock = "^4.0.2"
antsibull = "^0.45.1"
importlib-metadata = "1.7.0"
pylint = "^2.6.0"
pytz = "*"
packaging = "*"
jsondiff = "*"
sphinx_rtd_theme = "*"
hypothesis = "^6.8.0"
pytest-pythonpath = "^0.7.3"
parameterized = "^0.8.1"
invoke = "^2.2.0"
bandit = "^1.7.0"
antsibull-docs = "^1.7.3"
infrahub_sdk = "^0.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.general]
extension-pkg-whitelist = [
    "pydantic",
    "ujson",
]

[tool.pylint.format]
disable = "logging-fstring-interpolation"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions.
no-docstring-rgx="^(_|test_)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    consider-using-from-import,
    invalid-name,
    too-many-arguments,
    too-many-locals,
    keyword-arg-before-vararg,
    too-few-public-methods,
    too-many-instance-attributes,
    fixme,
    consider-using-f-string,
    protected-access,
    import-self,
    wrong-import-order,
    """

[tool.pylint.miscellaneous]
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint.similarities]
min-similarity-lines = 20

[tool.ruff]
line-length = 120

exclude = [
        ".git",
        ".tox",
        ".venv",
        "env",
        "_build",
        "build",
        "dist",
        "examples",
]

task-tags = [
    "FIXME",
    "TODO",
    "XXX",
]

[tool.ruff.lint]
preview = true

select = [
    # mccabe complexity
    "C90",
    # pycodestyle errors
    "E",
    # pycodestyle warnings
    "W",
    # pyflakes
    "F",
    # isort-like checks
    "I",
    # flake8-datetimez
    "DTZ",
    # flake8-import-conventions
    "ICN",
    # flake8-type-checking
    "TCH",
    # flake8-debugger
    "T10",
    # flake8-quotes
    "Q",
    # flake8-2020
    "YTT",
]

#https://docs.astral.sh/ruff/formatter/black/
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.ruff.mccabe]
# Target max-complexity=10
max-complexity = 31

[tool.ruff.per-file-ignores]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
python_paths = "./"
addopts = "-vv"
