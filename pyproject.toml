[tool.poetry]
name = "infrahub_ansible_modules"
version = "0.0.1"
description = "Ansible collection to interact with Infrahub's API"
authors = ["Benoit Kohler <benoit@opsmill.com"]
license = "GPLv3"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
ansible-core = "^2.14"
black = "*"
isort = "*"
ruff = "0.1.0"
codecov = "*"
coverage = "^6.5"
deepdiff = "*"
cryptography = "*"
jinja2 = "*"
jmespath = "*"
pytest = "*"
pytest-mock = "*"
pytest-xdist = "*"
pytest-forked = "^1.6.0"
pyyaml = "*"
mock = "^4.0.2"
antsibull = "^0.45.1"
importlib-metadata = "1.7.0"
pylint = "^2.6.0"
pytz = "*"
packaging = "*"
jsondiff = "*"
sphinx_rtd_theme = "*"
hypothesis = "^6.8.0"
pytest-pythonpath = "^0.7.3"
parameterized = "^0.8.1"
invoke = "^2.2.0"
bandit = "^1.7.0"
antsibull-docs = "^1.7.3"
infrahub = { path = "../infrahub/" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
        /(
          \.git
        | \.tox
        | \.venv
        | env/
        | _build
        | build
        | dist
        | examples
        )/
    '''

[tool.isort]
profile = "black"
known_first_party = [ "infrahub" , "infrahub_client", "infrahub_ctl" ]

[tool.pylint.general]
extension-pkg-whitelist = [
    "pydantic",
    "ujson",
]

[tool.pylint.format]
disable = "logging-fstring-interpolation"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions.
no-docstring-rgx="^(_|test_)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    consider-using-from-import,
    invalid-name,
    too-many-arguments,
    too-many-locals,
    keyword-arg-before-vararg,
    too-few-public-methods,
    too-many-instance-attributes,
    fixme,
    consider-using-f-string,
    protected-access,
    import-self,
    wrong-import-order,
    """

[tool.pylint.miscellaneous]
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint.similarities]
min-similarity-lines = 20

[tool.ruff]

select = [
    "C90",
    "DTZ",
    "E",
    "F",
    "ICN",
    "TCH",
    "T10",
    "Q",
    "W",
    "YTT",
]

line-length = 170

[tool.ruff.mccabe]
# Target max-complexity=10
max-complexity = 26

[tool.ruff.per-file-ignores]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
python_paths = "./"
addopts = "-vv"